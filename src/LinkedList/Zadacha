Задача 1. Създайте интерфейс List<T>, в който да са описани всички споменати в урока методи: 
•	boolean isEmpty() 
•	boolean contains(T item) 
•	void add(T item) 
•	void insertAt(T item, int index) 
•	void removeFrom(int index) 
•	void remove(T item) 
•	T get(int index) 
•	void clear() 
Задача 2. Създайте клас LinkedList<T> който да имплементира горния интерфейс. Имплементацията трябва да е с помощта на помощен клас Node<T>,
 който да изпълнява ролята на двойна кутийка, съдържаща данните, които се добавят в едната си половина и  връзка към следваща такава кутийка в другата. 
 Такива имплементации има много в интернет и ако се затруднявате можете да погледнете, но е желателно колкото се може да го направите сами. 
 
След имплементацията на всеки един от методите искам да направите съпоставка между тази имплементация и онази, която аз направих в час.
 За всяка една от операциите, да се изчисли сложността посредством Big O нотацията. 
 
Задачата да се реши и да се качи в гит хъб в ново репозитори, което да се казва datastructures до 07.03.2021г. вкл.